import { CoreLabeledDOMWidgetModel } from './widget_core';
import { DOMWidgetView, LabeledDOMWidgetView } from './widget';
export declare class BoolModel extends CoreLabeledDOMWidgetModel {
    defaults(): any;
}
export declare class CheckboxModel extends CoreLabeledDOMWidgetModel {
    defaults(): any;
}
export declare class CheckboxView extends LabeledDOMWidgetView {
    /**
     * Called when view is rendered.
     */
    render(): void;
    events(): {
        [e: string]: string;
    };
    /**
     * Handles when the checkbox is clicked.
     *
     * Calling model.set will trigger all of the other views of the
     * model to update.
     */
    _handle_click(): void;
    /**
     * Update the contents of this view
     *
     * Called when the model is changed. The model may have been
     * changed by another view or by a state update from the back-end.
     */
    update(options?: any): void;
    checkbox: HTMLInputElement;
}
export declare class ToggleButtonModel extends BoolModel {
    defaults(): any;
}
export declare class ToggleButtonView extends DOMWidgetView {
    /**
     * Called when view is rendered.
     */
    render(): void;
    update_button_style(): void;
    set_button_style(): void;
    /**
     * Update the contents of this view
     *
     * Called when the model is changed. The model may have been
     * changed by another view or by a state update from the back-end.
     */
    update(options?: any): void;
    events(): {
        [e: string]: string;
    };
    /**
     * Handles and validates user input.
     *
     * Calling model.set will trigger all of the other views of the
     * model to update.
     */
    _handle_click(event: any): void;
    /**
     * The default tag name.
     *
     * #### Notes
     * This is a read-only attribute.
     */
    readonly tagName: string;
    el: HTMLButtonElement;
    static class_map: {
        primary: string[];
        success: string[];
        info: string[];
        warning: string[];
        danger: string[];
    };
}
export declare class ValidModel extends BoolModel {
    defaults(): any;
}
export declare class ValidView extends LabeledDOMWidgetView {
    /**
     * Called when view is rendered.
     */
    render(): void;
    /**
     * Update the contents of this view
     *
     * Called when the model is changed.  The model may have been
     * changed by another view or by a state update from the back-end.
     */
    update(): void;
    readout: HTMLSpanElement;
}
